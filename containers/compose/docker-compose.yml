version: '3'

services:
  spectral-app:
    container_name: spectral-app
    build:
      context: ../../
      dockerfile: containers/app/Dockerfile
    command: ["python", "service/manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ../../:/app/
    env_file:
      - ../../environments/production.env
    ports:
      - "8000:8000"
    depends_on:
      - spectral-db
    links:
      - spectral-db:spectral-db
    networks:
      - spectralnetwork

  spectral-db:
    container_name: spectral-db
    build:
      context: ../../
      dockerfile: containers/database/Dockerfile
    image: postgres:16
    volumes:
      - spectral-db-data:/var/lib/postgresql/data
    env_file:
      - ../../environments/production.env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    networks:
      - spectralnetwork

  test-db:
    image: 'postgres:16'
    restart: always
    environment:
    - POSTGRES_PASSWORD=postgres
    ports:
    - '9432:5432'

  spectral-test:
    container_name: spectral-test
    network_mode: "host"
    build:
      context: ../../
      dockerfile: containers/app/Dockerfile
    volumes:
      - ../../:/app/
    env_file:
      - ../../environments/testing.env
    depends_on:
      - test-db
    entrypoint: bash ../../app/containers/compose/tests.sh

networks:
  spectralnetwork:
    driver: bridge

volumes:
  spectral-db-data: